{
    "name": "Math",
    "category": "hex:patterns",
    "icon": "minecraft:stick",
    "sortnum": 2,
    "advancement": "hex:root",
    "read_by_default": true,
    "pages": [
        {
            "type": "patchouli:text",
            "text": "Many mathematical operations function on both numbers and vectors. Such arguments are written as \"num/vec\"."
        },
        {
            "type": "patchouli:empty"
        },
        {    
            "type": "hex:pattern",
            "header": "Additive Distillation",
            "anchor": "OpAdd",
            "input": "num/vec, num/vec",
            "output": "num/vec",
            "text": "Perform addition.",
            "patterns": {
                "startdir": "NORTH_EAST",
                "signature": "waaw"
            }
        },
        {
            "type": "patchouli:text",
            "text": "As such:$(li)With two numbers at the top of the stack, combines them into their sum.$(li)With a number and a vector, removes the number from the stack and adds it to each element of the vector.$(li)With two vectors, combines them by summing corresponding components into a new vector (i.e. [1, 2, 3] + [0, 4, -1] = [1, 6, 2])."
        },
        {    
            "type": "hex:pattern",
            "header": "Subtractive Dstln.",
            "anchor": "OpSub",
            "input": "num/vec, num/vec",
            "output": "num/vec",
            "text": "Perform subtraction",
            "patterns": {
                "startdir": "NORTH_WEST",
                "signature": "wddw"
            }
        },
        {
            "type": "patchouli:text",
            "text": "As such:$(li)With two numbers at the top of the stack, combines them into their difference.$(li)With a number and a vector, removes the number from the stack and subtracts it from each element of the vector.$(li)With two vectors, combines them by subtracting each component.$(br2)In all cases, the top of the stack or its components are subtracted $(italic)from/$ the second-from-the-top."
        },
        {    
            "type": "hex:pattern",
            "header": "Multiplicative Dstln.",
            "anchor": "OpMulDot",
            "input": "num/vec, num/vec",
            "output": "num/vec",
            "text": "Perform multiplication or the dot product.",
            "patterns": {
                "startdir": "SOUTH_EAST",
                "signature": "waqaw"
            }
        },
        {
            "type": "patchouli:text",
            "text": "As such:$(li)With two numbers, combines them into their product.$(li)With a number and a vector, removes the number from the stack and multiplies each component of the vector by that number.$(li)With two vectors, combines them into their $(l:https://www.mathsisfun.com/algebra/vectors-dot-product.html)dot product/$."
        },
        {    
            "type": "hex:pattern",
            "header": "Division Dstln.",
            "anchor": "OpDivCross",
            "input": "num/vec, num/vec",
            "output": "num/vec",
            "text": "Perform division or the cross product.",
            "patterns": {
                "startdir": "NORTH_EAST",
                "signature": "wdedw"
            }
        },
        {
            "type": "patchouli:text",
            "text": "As such:$(li)With two numbers, combines them into their quotient.$(li)With a number and a vector, removes the number and divides it by each element of the vector.$(li)With two vectors, combines them into their $(l:https://www.mathsisfun.com/algebra/vectors-cross-product.html)cross product/$.$(br2)In the first and second cases, the top of the stack or its components comprise the dividend, and the second-from-the-top or its components are the divisor.$(p)WARNING: Never divide by zero!"
        },
        {    
            "type": "hex:pattern",
            "header": "Length Dstln.",
            "anchor": "OpAbsLen",
            "input": "num/vec",
            "output": "number",
            "text": "Compute the absolute value or length.",
            "patterns": {
                "startdir": "NORTH_EAST",
                "signature": "wqaqw"
            }
        },
        {
            "type": "patchouli:text",
            "text": "Replaces a number with its absolute value, or a vector with its length."
        },
        {    
            "type": "hex:pattern",
            "header": "Power Distillation",
            "anchor": "OpPowProj",
            "input": "num/vec, num/vec",
            "output": "num/vec",
            "text": "Perform exponentiation or vector projection.",
            "patterns": {
                "startdir": "NORTH_WEST",
                "signature": "wedew"
            }
        },
        {
            "type": "patchouli:text",
            "text": "$(li)With two numbers, combines them by raising the first to the power of the second.$(li)With a number and a vector, removes the number and raises each component of the vector to the number's power.$(li)With two vectors, combines them into the $(l:https://en.wikipedia.org/wiki/Vector_projection)vector projection/$ of the top of the stack onto the second-from-the-top.$(br2)In the first and second cases, the first argument or its components are the base, and the second argument or its components are the exponent."
        },
        {
            "type": "hex:pattern",
            "header": "Vector Exaltation",
            "anchor": "OpConstructVec",
            "input": "num, num, num",
            "output": "vector",
            "text": "Combine three numbers at the top of the stack into a vector's X, Y, and Z components (top to bottom).",
            "patterns": {
                "startdir": "WEST",
                "signature": "eqqqqq"
            }
        },
        {
            "type": "hex:pattern",
            "header": "Vector Disintegration",
            "anchor": "OpDeconstructVec",
            "input": "vector",
            "output": "num, num, num",
            "text": "Split a vector into its X, Y, and Z components (top to bottom).",
            "patterns": {
                "startdir": "WEST",
                "signature": "qeeeee"
            }
        }
    ]
}
